FROM ubuntu:22.04
ENV DEBIAN_FRONTEND=noninteractive
WORKDIR /home/ubuntu

### PYTHON MODULES and utils
RUN apt-get update && \
    apt-get install wget ca-certificates python3-pip -y --no-install-recommends && \
    pip3 install boto3 watchtower requests --no-cache-dir

### SRA-TOOLKIT
RUN mkdir -p sratoolkit/local && \
    wget https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/3.0.1/sratoolkit.3.0.1-ubuntu64.tar.gz -qO - \
        | tar -zx -C /home/ubuntu/sratoolkit/  && \
    echo 'export PATH="$PATH":/home/ubuntu/sratoolkit/sratoolkit.3.0.1-ubuntu64/bin' >> ~/.bashrc

### SALMON
RUN wget https://github.com/COMBINE-lab/salmon/releases/download/v1.10.0/salmon-1.10.0_linux_x86_64.tar.gz -qO -  \
        | tar -zx -C /home/ubuntu/ && \
    echo 'export PATH="$PATH":/home/ubuntu/salmon-latest_linux_x86_64/bin' >> ~/.bashrc

### R
RUN apt-get install r-base-dev -y --no-install-recommends

### R packages
# 'DESeq2', 'RCurl', 'RcppArmadillo' (libraries required by DESeq2) require
RUN apt-get install libxml2-dev libssl-dev libcurl4-openssl-dev libopenblas-dev libopenblas-dev -y
RUN Rscript -e 'install.packages(c("readr", "dplyr", "BiocManager", "jsonlite"))'
RUN Rscript -e 'BiocManager::install(c("DESeq2", "tximport"))'

### CWAGENT
COPY docker_cwagent_config.json /etc/cwagentconfig/default-linux-config.json
COPY credentials /root/.aws/credentials
ENV AWS_DEFAULT_REGION="us-east-1"
ENV RUN_IN_CONTAINER="True"
RUN wget -q https://s3.amazonaws.com/amazoncloudwatch-agent/debian/amd64/latest/amazon-cloudwatch-agent.deb && \
    dpkg -i -E amazon-cloudwatch-agent.deb && \
    rm amazon-cloudwatch-agent.deb

# Config for sratoolkit untill I find a way to configure it using cli/bash
COPY data/.ncbi /root/.ncbi
# Copy SALMON index
COPY data/salmon_index /home/ubuntu/index/human_transcriptome_index
# Copy tx2gene
COPY data/DESeq2/tx2gene.gencode.v42.csv /home/ubuntu/DESeq2/tx2gene.gencode.v42.csv
# COPY scripts
COPY src/scripts/count_normalization.R /home/ubuntu/DESeq2/count_normalization.R
COPY src/Consumer /home/ubuntu/Consumer
COPY container_start.py /home/ubuntu/container_start.py

ENTRYPOINT ["python3", "/home/ubuntu/container_start.py"]